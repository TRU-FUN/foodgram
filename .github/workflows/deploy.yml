name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∑–∞–ø—É—Å–∫ flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r backend/requirements.txt
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PEP8..."
          flake8 backend --exclude migrations --max-line-length=79

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        run: |
          npm ci --legacy-peer-deps
          CI=false npm run build
        working-directory: frontend

      - name: –ê—Ä—Ö–∏–≤–∞—Ü–∏—è build-–ø–∞–ø–∫–∏
        run: tar -czf build.tar.gz -C frontend/build .

      - name: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ build –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: 'build.tar.gz'
          target: '/home/${{ secrets.SERVER_USER }}/foodgram/frontend'

      - name: –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/foodgram/frontend

            echo 'üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ build...'
            rm -rf build
            mkdir build

            echo 'üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Å–≤–µ–∂–µ–≥–æ build...'
            tar -xzf build.tar.gz -C build
            rm build.tar.gz

            echo 'üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ build:'
            ls -la build

            echo 'üì¶ –î–µ–ø–ª–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...'
            cd ../infra
            sudo docker compose down
            sudo docker compose pull
            sudo docker compose up -d --build
